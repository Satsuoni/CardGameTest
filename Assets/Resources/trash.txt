conditional txt
{
string text "Called hook"
}

conditional txt2
{
string text "Called hick2"
}

conditional testRule
{
tag EXECUTE_PREFIX
condition _condition {
      and { condition { command_type _currentCommand push }
           condition { strcomp _currentCommand.arg0 _Game.HAND } }
          }
function _commands 
 {
 hook log _Game.txt
 return hook log _Game.txt2
 }
}
 accumulate condition { any |-.SELECTED condition { tag <=<<.slot } } |-.TARGETED._Owner.BODY _remFromBody
foreach _remFromBody
{
remove |-.TARGETED._Owner.BODY _target
}
  clear _remFromBody


condition { strcomp |-.SELECTED._Owner.playerID <=|-.TARGETED._Owner.playerID }


condition trythis
{
and
{
condition { command_type _currentCommand sub } 
condition { isset mcost } 
condition { strcomp _currentCommand.arg0 _target._Owner.Energy } 
}
}

conditional tryrule
{
tag EXECUTE_PREFIX
condition _condition trythis
function _commands
 {
 return set mcost -1
 }
}



